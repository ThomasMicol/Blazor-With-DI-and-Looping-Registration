@using Blazor_With_DI_and_Looping_Registration.Data.Login;
@using Blazor_With_DI_and_Looping_Registration.Pages;
@using Blazor_With_DI_and_Looping_Registration.Data; 
@using Blazor_With_DI_and_Looping_Registration.Data.Data_Set_Models;
@inject Blazor_With_DI_and_Looping_Registration.Data.FinanceDbContext DbContext;

@inject Blazor_With_DI_and_Looping_Registration.Data.Login.ILoginService LoginService;

@if (LoginService.Investor != null)
{
    <Dashboard></Dashboard>

}
else
{
<form class="o-container o-container--xsmall c-card u-high">
    <header class="c-card__header">
        <h2 class="c-heading">
            Login
        </h2>
    </header>

    <div class="c-card__body">

        <EditForm Model="@loginForm" OnValidSubmit="@Login">
            <label class="c-label">
                email:
                <InputText id="Email" @bind-Value="loginForm.Email" class="c-field c-field--label" />
            </label>
            <label class="c-label">
                password:
                <InputText id="Password" @bind-Value="loginForm.Password" class="c-field c-field--label" />
            </label>
            <footer class="c-card__footer">
                <button type="submit" class="c-button c-button--brand c-button--block">
                    Login
                </button>
            </footer>
        </EditForm>
    </div>
    <footer style="padding: 1em;">
        <div style="margin-bottom: 2em;">
            <p>
                <span class="font-weight-bold">Important: </span>
                This is not a demo for security.
            </p>
            <p>All passwords are plaintext and all data entered is stored in an in-memory database.</p>
        </div>
        <div>
            <p>Test login</p>
            <p>email: testEmail1@gmail.com<br />
            password: davieDaMan123</p>
        </div>
    </footer>
</form>
    
}


@if (InvalidLogin)
{
    <p>A user with that email/password was not found</p>
}


@code {
    private LoginFormModel loginForm = new LoginFormModel();
    private bool InvalidLogin = false;

    [Parameter]
    public Investor Investor { get; set; }

    protected override void OnInitialized()
    {
        DataGenerator.Init(DbContext);

        base.OnInitialized();
    }

    private void Login()
    {
        var inv = LoginService.Login(loginForm.Email, loginForm.Password);
        if (inv == null)
        {
            InvalidLogin = true;
        }
        else
        {
            Investor = inv;
        }
    }
}
