@page "/fetchdata"

@using Blazor_With_DI_and_Looping_Registration.Data
@using Data.Data_Set_Models;

@inject WeatherForecastService ForecastService
@inject InvestorService InvestorService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (loading && investor == null)
{
    <p><em>Loading...</em></p>
}
else
{
    investor = InvestorService.GetInvestor(2).Result;
    <p>@investor.Name</p>
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>

}

@code {
    private WeatherForecast[] forecasts;
    private Investor investor;
    private bool loading;

    protected override async Task OnInitializedAsync()
    {
        loading = true;
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
        var investor = new Investor
        {
            Id = 1,
            Income = 50000M,
            Name = "David"
        };

        var investor2 = new Investor
        {
            Id = 2,
            Income = 80000M,
            Name = "Fiona"
        };

        InvestorService.CreateInvestor(investor);
        InvestorService.CreateInvestor(investor2);


        investor = await InvestorService.GetInvestor(2);

        loading = false;
    }

}