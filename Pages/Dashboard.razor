@using Blazor_With_DI_and_Looping_Registration.Data.Extensions;
@inject Blazor_With_DI_and_Looping_Registration.Data.Login.ILoginService LoginService;
@inject IJSRuntime JsRunTime;

<h3>Dashboard</h3>
@if (LoginService.Investor != null)
{
<div class="o-grid o-grid--wrap o-grid--small-full u-letter-box-medium">
    <div class="o-grid__cell o-grid__cell--width-50">
        <div class="u-gradient-text u-gradient-text--success u-xlarge">
            Income
        </div>
        <div class="o-panel-container" style="height: 150px">
            <div class="o-panel">
                <ul>
                    @foreach (var expense in Investor.Income.ToList())
                    {
                        <li>
                            @expense.TransactionAmount.ToCurrency() | @expense.Frequency.ToString()
                        </li>
                    }

                </ul>
            </div>

        </div>
        <div class="card-footer">
            <div class="o-grid">
                <button class="o-grid__cell o-grid__cell--width-10 c-button" @onclick="ShowAddIncomeModal">
                    <span class="oi oi-plus"></span>
                </button>
                <blaze-counter class="o-grid__cell u-large u-gradient-text--mono"
                               auto-start="true"
                               start-value="0"
                               end-value="@Investor.Income.Sum(i => i.TransactionAmount)"
                               duration="2"
                               decimals="2">
                    <span slot="prefix">$</span>

                </blaze-counter>
            </div>
        </div>

    </div>

    <div class="o-grid__cell o-grid__cell--width-50">

        <div class="u-gradient-text u-gradient-text--error u-xlarge">
            Expenses
        </div>
        <div class="o-panel-container" style="height: 150px">
            <div class="o-panel">
                <ul>
                    @foreach (var expense in Investor.Expenses.ToList())
                    {
                        <li>
                            @expense.TransactionAmount.ToCurrency() | @expense.Frequency.ToString()
                        </li>
                    }

                </ul>

            </div>

        </div>
        <div class="card-footer">
            <div class="o-grid">
                <button class="o-grid__cell--width-10 c-button" @onclick="ShowAddExpenseModal">
                    <span class="oi oi-minus"></span>

                </button>
                <blaze-counter class="o-grid__cell u-large u-gradient-text--mono"
                               auto-start="true"
                               start-value="0"
                               end-value="@Investor.Expenses.Sum(i => i.TransactionAmount)"
                               duration="2"
                               decimals="2">
                    <span slot="prefix">$</span>
                </blaze-counter>
            </div>
        </div>

    </div>

    <div class="c-card">
            <blaze-divider type="dashed"></blaze-divider>
    </div>
        <div class="o-grid">
            <div class="o-grid__cell">
                <div class="o-grid">
                    <div class="o-panel-container">
                        <div class="o-panel">
                            this is some content
                        </div>
                    </div>
                </div>
                <div class="o-grid">

                    <div class="o-panel-container">
                        <div class="o-panel">
                            this is some content
                        </div>
                    </div>

                </div>
            </div>
            <div class="o-grid__cell">
                <div class="o-panel-container">
                    <div class="o-panel">
                        this is some content
                    </div>
                </div>
        </div>
    </div>
</div>

<blaze-modal small dismissible id="addIncomeModal">
    <blaze-card>
        <blaze-card-header>
            <h2 class="c-heading u-xlarge">
                Add Income
            </h2>
        </blaze-card-header>
        <blaze-card-body>
            <EditForm Model="@incomeForm" OnValidSubmit="@AddIncome">
                <label class="c-label">
                    email:
                    <InputNumber id="Amount" @bind-Value="incomeForm.Amount" class="c-field c-field--label" />
                </label>
                <label class="c-label">
                    password:
                    <InputSelect id="Frequency" @bind-Value="incomeForm.Frequency" class="c-field c-field--label" />
                </label>
                <footer class="c-card__footer">
                    <button type="submit" class="c-button c-button--brand c-button--block">
                        Login
                    </button>
                </footer>
            </EditForm>
        </blaze-card-body>
        <blaze-card-footer>
            <div class="c-input-group">
                <button class="c-button c-button--block c-button--brand">Button</button>
                <button class="c-button c-button--block c-button--info">Button</button>
            </div>
        </blaze-card-footer>
    </blaze-card>
</blaze-modal>

<blaze-modal small dismissible id="addExpenseModal">
    <blaze-card>
        <blaze-card-header>
            <h2 class="c-heading u-xlarge">
                Add Expense
            </h2>
        </blaze-card-header>
        <blaze-card-body>
            <p class="c-paragraph">
                Lorem ipsum dolor sit amet, feugiat corpora ex eam. Inciderint eloquentiam sea et.
            </p>
        </blaze-card-body>
        <blaze-card-footer>
            <div class="c-input-group">
                <button class="c-button c-button--block c-button--brand">Button</button>
                <button class="c-button c-button--block c-button--info">Button</button>
            </div>
        </blaze-card-footer>
    </blaze-card>
</blaze-modal>
}


@code {
    [Parameter]
    public int test { get; set; }

    public Blazor_With_DI_and_Looping_Registration.Data.Dashboard.Models.PaymentForm incomeForm = new Data.Dashboard.Models.PaymentForm();
    public Blazor_With_DI_and_Looping_Registration.Data.Dashboard.Models.PaymentForm expenseForm = new Data.Dashboard.Models.PaymentForm();

    public Blazor_With_DI_and_Looping_Registration.Data.Data_Set_Models.Investor Investor
    {
        get
        {
            return LoginService.Investor;
        }
    }

    public void ShowAddIncomeModal(MouseEventArgs args) {
        JsRunTime.InvokeVoidAsync("openAddIncomeModalElement");
    }

    public void ShowAddExpenseModal(MouseEventArgs args)
    {
        JsRunTime.InvokeVoidAsync("openAddExpenseModalElement");
    }

    public void AddIncome()
    {

    }

    public void AddExpense(MouseEventArgs args)
    {

    }

}
